
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sun Mar 03 22:10:34 CST 2019
//----------------------------------------------------

package AnalizadorGxml;

import AnalizadorGxml.Estructura.*;
import java_cup.runtime.*;
import java.util.ArrayList;
import creatorxml.Main;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sun Mar 03 22:10:34 CST 2019
  */
public class sintacticoGxml extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public sintacticoGxml() {super();}

  /** Constructor which sets the default scanner. */
  public sintacticoGxml(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public sintacticoGxml(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\104\000\002\002\004\000\002\002\003\000\002\003" +
    "\004\000\002\003\003\000\002\004\004\000\002\004\003" +
    "\000\002\005\011\000\002\006\004\000\002\006\003\000" +
    "\002\007\012\000\002\010\004\000\002\010\003\000\002" +
    "\011\012\000\002\011\011\000\002\012\004\000\002\012" +
    "\003\000\002\013\003\000\002\013\003\000\002\013\003" +
    "\000\002\013\003\000\002\013\003\000\002\014\012\000" +
    "\002\014\011\000\002\015\012\000\002\015\011\000\002" +
    "\016\004\000\002\016\004\000\002\016\003\000\002\016" +
    "\003\000\002\017\011\000\002\020\004\000\002\020\003" +
    "\000\002\021\011\000\002\021\010\000\002\022\011\000" +
    "\002\022\010\000\002\023\011\000\002\024\012\000\002" +
    "\024\012\000\002\025\012\000\002\025\012\000\002\026" +
    "\004\000\002\026\003\000\002\027\004\000\002\027\003" +
    "\000\002\030\005\000\002\030\005\000\002\030\005\000" +
    "\002\030\005\000\002\030\005\000\002\030\005\000\002" +
    "\030\005\000\002\030\005\000\002\030\005\000\002\030" +
    "\005\000\002\030\005\000\002\030\005\000\002\030\005" +
    "\000\002\030\005\000\002\030\005\000\002\030\005\000" +
    "\002\030\005\000\002\030\005\000\002\030\005\000\002" +
    "\030\005\000\002\030\005\000\002\031\003\000\002\031" +
    "\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\311\000\004\004\005\001\002\000\004\002\313\001" +
    "\002\000\006\007\305\010\015\001\002\000\004\002\000" +
    "\001\002\000\004\004\005\001\002\000\006\002\ufff9\004" +
    "\ufff9\001\002\000\006\002\ufffe\004\013\001\002\000\004" +
    "\004\ufffc\001\002\000\004\010\015\001\002\000\006\002" +
    "\ufffa\004\ufffa\001\002\000\054\023\022\024\036\025\035" +
    "\026\043\027\030\030\021\031\017\032\042\033\044\034" +
    "\041\035\031\036\023\037\034\040\016\041\032\042\024" +
    "\043\037\044\033\045\025\046\020\047\027\001\002\000" +
    "\004\050\301\001\002\000\004\050\277\001\002\000\004" +
    "\050\275\001\002\000\004\050\273\001\002\000\004\050" +
    "\271\001\002\000\004\050\267\001\002\000\004\050\265" +
    "\001\002\000\004\050\263\001\002\000\056\023\022\024" +
    "\036\025\035\026\043\027\030\030\021\031\017\032\042" +
    "\033\044\034\041\035\031\036\023\037\034\040\016\041" +
    "\032\042\024\043\037\044\033\045\025\046\020\047\027" +
    "\052\101\001\002\000\004\050\077\001\002\000\004\050" +
    "\075\001\002\000\004\050\073\001\002\000\004\050\071" +
    "\001\002\000\004\050\067\001\002\000\004\050\065\001" +
    "\002\000\004\050\063\001\002\000\004\050\061\001\002" +
    "\000\004\050\057\001\002\000\056\023\uffd5\024\uffd5\025" +
    "\uffd5\026\uffd5\027\uffd5\030\uffd5\031\uffd5\032\uffd5\033\uffd5" +
    "\034\uffd5\035\uffd5\036\uffd5\037\uffd5\040\uffd5\041\uffd5\042" +
    "\uffd5\043\uffd5\044\uffd5\045\uffd5\046\uffd5\047\uffd5\052\uffd5" +
    "\001\002\000\004\050\053\001\002\000\004\050\051\001" +
    "\002\000\004\050\047\001\002\000\004\050\045\001\002" +
    "\000\004\053\046\001\002\000\056\023\uffcc\024\uffcc\025" +
    "\uffcc\026\uffcc\027\uffcc\030\uffcc\031\uffcc\032\uffcc\033\uffcc" +
    "\034\uffcc\035\uffcc\036\uffcc\037\uffcc\040\uffcc\041\uffcc\042" +
    "\uffcc\043\uffcc\044\uffcc\045\uffcc\046\uffcc\047\uffcc\052\uffcc" +
    "\001\002\000\004\022\050\001\002\000\056\023\uffd1\024" +
    "\uffd1\025\uffd1\026\uffd1\027\uffd1\030\uffd1\031\uffd1\032\uffd1" +
    "\033\uffd1\034\uffd1\035\uffd1\036\uffd1\037\uffd1\040\uffd1\041" +
    "\uffd1\042\uffd1\043\uffd1\044\uffd1\045\uffd1\046\uffd1\047\uffd1" +
    "\052\uffd1\001\002\000\004\053\052\001\002\000\056\023" +
    "\uffcd\024\uffcd\025\uffcd\026\uffcd\027\uffcd\030\uffcd\031\uffcd" +
    "\032\uffcd\033\uffcd\034\uffcd\035\uffcd\036\uffcd\037\uffcd\040" +
    "\uffcd\041\uffcd\042\uffcd\043\uffcd\044\uffcd\045\uffcd\046\uffcd" +
    "\047\uffcd\052\uffcd\001\002\000\006\054\055\055\056\001" +
    "\002\000\056\023\uffcb\024\uffcb\025\uffcb\026\uffcb\027\uffcb" +
    "\030\uffcb\031\uffcb\032\uffcb\033\uffcb\034\uffcb\035\uffcb\036" +
    "\uffcb\037\uffcb\040\uffcb\041\uffcb\042\uffcb\043\uffcb\044\uffcb" +
    "\045\uffcb\046\uffcb\047\uffcb\052\uffcb\001\002\000\056\023" +
    "\uffbf\024\uffbf\025\uffbf\026\uffbf\027\uffbf\030\uffbf\031\uffbf" +
    "\032\uffbf\033\uffbf\034\uffbf\035\uffbf\036\uffbf\037\uffbf\040" +
    "\uffbf\041\uffbf\042\uffbf\043\uffbf\044\uffbf\045\uffbf\046\uffbf" +
    "\047\uffbf\052\uffbf\001\002\000\056\023\uffbe\024\uffbe\025" +
    "\uffbe\026\uffbe\027\uffbe\030\uffbe\031\uffbe\032\uffbe\033\uffbe" +
    "\034\uffbe\035\uffbe\036\uffbe\037\uffbe\040\uffbe\041\uffbe\042" +
    "\uffbe\043\uffbe\044\uffbe\045\uffbe\046\uffbe\047\uffbe\052\uffbe" +
    "\001\002\000\004\053\060\001\002\000\056\023\uffc4\024" +
    "\uffc4\025\uffc4\026\uffc4\027\uffc4\030\uffc4\031\uffc4\032\uffc4" +
    "\033\uffc4\034\uffc4\035\uffc4\036\uffc4\037\uffc4\040\uffc4\041" +
    "\uffc4\042\uffc4\043\uffc4\044\uffc4\045\uffc4\046\uffc4\047\uffc4" +
    "\052\uffc4\001\002\000\004\051\062\001\002\000\056\023" +
    "\uffd3\024\uffd3\025\uffd3\026\uffd3\027\uffd3\030\uffd3\031\uffd3" +
    "\032\uffd3\033\uffd3\034\uffd3\035\uffd3\036\uffd3\037\uffd3\040" +
    "\uffd3\041\uffd3\042\uffd3\043\uffd3\044\uffd3\045\uffd3\046\uffd3" +
    "\047\uffd3\052\uffd3\001\002\000\004\051\064\001\002\000" +
    "\056\023\uffd2\024\uffd2\025\uffd2\026\uffd2\027\uffd2\030\uffd2" +
    "\031\uffd2\032\uffd2\033\uffd2\034\uffd2\035\uffd2\036\uffd2\037" +
    "\uffd2\040\uffd2\041\uffd2\042\uffd2\043\uffd2\044\uffd2\045\uffd2" +
    "\046\uffd2\047\uffd2\052\uffd2\001\002\000\004\053\066\001" +
    "\002\000\056\023\uffc8\024\uffc8\025\uffc8\026\uffc8\027\uffc8" +
    "\030\uffc8\031\uffc8\032\uffc8\033\uffc8\034\uffc8\035\uffc8\036" +
    "\uffc8\037\uffc8\040\uffc8\041\uffc8\042\uffc8\043\uffc8\044\uffc8" +
    "\045\uffc8\046\uffc8\047\uffc8\052\uffc8\001\002\000\004\022" +
    "\070\001\002\000\056\023\uffc3\024\uffc3\025\uffc3\026\uffc3" +
    "\027\uffc3\030\uffc3\031\uffc3\032\uffc3\033\uffc3\034\uffc3\035" +
    "\uffc3\036\uffc3\037\uffc3\040\uffc3\041\uffc3\042\uffc3\043\uffc3" +
    "\044\uffc3\045\uffc3\046\uffc3\047\uffc3\052\uffc3\001\002\000" +
    "\006\054\055\055\056\001\002\000\056\023\uffc6\024\uffc6" +
    "\025\uffc6\026\uffc6\027\uffc6\030\uffc6\031\uffc6\032\uffc6\033" +
    "\uffc6\034\uffc6\035\uffc6\036\uffc6\037\uffc6\040\uffc6\041\uffc6" +
    "\042\uffc6\043\uffc6\044\uffc6\045\uffc6\046\uffc6\047\uffc6\052" +
    "\uffc6\001\002\000\004\051\074\001\002\000\056\023\uffca" +
    "\024\uffca\025\uffca\026\uffca\027\uffca\030\uffca\031\uffca\032" +
    "\uffca\033\uffca\034\uffca\035\uffca\036\uffca\037\uffca\040\uffca" +
    "\041\uffca\042\uffca\043\uffca\044\uffca\045\uffca\046\uffca\047" +
    "\uffca\052\uffca\001\002\000\004\022\076\001\002\000\056" +
    "\023\uffd0\024\uffd0\025\uffd0\026\uffd0\027\uffd0\030\uffd0\031" +
    "\uffd0\032\uffd0\033\uffd0\034\uffd0\035\uffd0\036\uffd0\037\uffd0" +
    "\040\uffd0\041\uffd0\042\uffd0\043\uffd0\044\uffd0\045\uffd0\046" +
    "\uffd0\047\uffd0\052\uffd0\001\002\000\006\054\055\055\056" +
    "\001\002\000\056\023\uffc0\024\uffc0\025\uffc0\026\uffc0\027" +
    "\uffc0\030\uffc0\031\uffc0\032\uffc0\033\uffc0\034\uffc0\035\uffc0" +
    "\036\uffc0\037\uffc0\040\uffc0\041\uffc0\042\uffc0\043\uffc0\044" +
    "\uffc0\045\uffc0\046\uffc0\047\uffc0\052\uffc0\001\002\000\004" +
    "\004\105\001\002\000\056\023\uffd6\024\uffd6\025\uffd6\026" +
    "\uffd6\027\uffd6\030\uffd6\031\uffd6\032\uffd6\033\uffd6\034\uffd6" +
    "\035\uffd6\036\uffd6\037\uffd6\040\uffd6\041\uffd6\042\uffd6\043" +
    "\uffd6\044\uffd6\045\uffd6\046\uffd6\047\uffd6\052\uffd6\001\002" +
    "\000\006\004\ufff6\005\ufff6\001\002\000\006\004\105\005" +
    "\257\001\002\000\004\011\106\001\002\000\054\023\022" +
    "\024\036\025\035\026\043\027\030\030\021\031\017\032" +
    "\042\033\044\034\041\035\031\036\023\037\034\040\016" +
    "\041\032\042\024\043\037\044\033\045\025\046\020\047" +
    "\027\001\002\000\056\023\022\024\036\025\035\026\043" +
    "\027\030\030\021\031\017\032\042\033\044\034\041\035" +
    "\031\036\023\037\034\040\016\041\032\042\024\043\037" +
    "\044\033\045\025\046\020\047\027\052\110\001\002\000" +
    "\006\004\113\005\114\001\002\000\006\004\113\005\253" +
    "\001\002\000\006\004\uffed\005\uffed\001\002\000\014\012" +
    "\125\013\127\017\124\020\126\021\130\001\002\000\004" +
    "\011\122\001\002\000\006\004\uffef\005\uffef\001\002\000" +
    "\006\004\ufff2\005\ufff2\001\002\000\006\004\ufff0\005\ufff0" +
    "\001\002\000\006\004\uffee\005\uffee\001\002\000\006\004" +
    "\ufff1\005\ufff1\001\002\000\004\052\123\001\002\000\006" +
    "\004\ufff4\005\ufff4\001\002\000\054\023\022\024\036\025" +
    "\035\026\043\027\030\030\021\031\017\032\042\033\044" +
    "\034\041\035\031\036\023\037\034\040\016\041\032\042" +
    "\024\043\037\044\033\045\025\046\020\047\027\001\002" +
    "\000\056\023\022\024\036\025\035\026\043\027\030\030" +
    "\021\031\017\032\042\033\044\034\041\035\031\036\023" +
    "\037\034\040\016\041\032\042\024\043\037\044\033\045" +
    "\025\046\020\047\027\052\233\001\002\000\054\023\022" +
    "\024\036\025\035\026\043\027\030\030\021\031\017\032" +
    "\042\033\044\034\041\035\031\036\023\037\034\040\016" +
    "\041\032\042\024\043\037\044\033\045\025\046\020\047" +
    "\027\001\002\000\054\023\022\024\036\025\035\026\043" +
    "\027\030\030\021\031\017\032\042\033\044\034\041\035" +
    "\031\036\023\037\034\040\016\041\032\042\024\043\037" +
    "\044\033\045\025\046\020\047\027\001\002\000\054\023" +
    "\022\024\036\025\035\026\043\027\030\030\021\031\017" +
    "\032\042\033\044\034\041\035\031\036\023\037\034\040" +
    "\016\041\032\042\024\043\037\044\033\045\025\046\020" +
    "\047\027\001\002\000\056\023\022\024\036\025\035\026" +
    "\043\027\030\030\021\031\017\032\042\033\044\034\041" +
    "\035\031\036\023\037\034\040\016\041\032\042\024\043" +
    "\037\044\033\045\025\046\020\047\027\052\132\001\002" +
    "\000\006\004\136\006\135\001\002\000\006\005\142\006" +
    "\143\001\002\000\004\005\137\001\002\000\006\005\uffd7" +
    "\006\uffd7\001\002\000\004\012\125\001\002\000\004\021" +
    "\140\001\002\000\004\052\141\001\002\000\006\004\uffda" +
    "\005\uffda\001\002\000\004\021\144\001\002\000\006\005" +
    "\uffd8\006\uffd8\001\002\000\004\052\145\001\002\000\006" +
    "\004\uffd9\005\uffd9\001\002\000\056\023\022\024\036\025" +
    "\035\026\043\027\030\030\021\031\017\032\042\033\044" +
    "\034\041\035\031\036\023\037\034\040\016\041\032\042" +
    "\024\043\037\044\033\045\025\046\020\047\027\052\147" +
    "\001\002\000\006\004\154\005\151\001\002\000\006\004" +
    "\220\005\uffe6\001\002\000\004\013\215\001\002\000\006" +
    "\004\214\005\uffe5\001\002\000\004\005\210\001\002\000" +
    "\006\014\155\016\156\001\002\000\004\052\167\001\002" +
    "\000\004\052\157\001\002\000\006\005\161\006\135\001" +
    "\002\000\006\005\164\006\143\001\002\000\004\016\162" +
    "\001\002\000\004\052\163\001\002\000\006\004\uffde\005" +
    "\uffde\001\002\000\004\016\165\001\002\000\004\052\166" +
    "\001\002\000\006\004\uffdf\005\uffdf\001\002\000\004\004" +
    "\170\001\002\000\004\015\177\001\002\000\006\004\uffe2" +
    "\005\uffe2\001\002\000\006\004\170\005\173\001\002\000" +
    "\004\014\175\001\002\000\006\004\uffe3\005\uffe3\001\002" +
    "\000\004\052\176\001\002\000\006\004\uffe4\005\uffe4\001" +
    "\002\000\004\052\200\001\002\000\006\005\202\006\135" +
    "\001\002\000\006\005\205\006\143\001\002\000\004\015" +
    "\203\001\002\000\004\052\204\001\002\000\006\004\uffe0" +
    "\005\uffe0\001\002\000\004\015\206\001\002\000\004\052" +
    "\207\001\002\000\006\004\uffe1\005\uffe1\001\002\000\004" +
    "\013\211\001\002\000\004\052\212\001\002\000\006\004" +
    "\uffea\005\uffea\001\002\000\004\005\uffe8\001\002\000\004" +
    "\014\155\001\002\000\004\052\216\001\002\000\006\004" +
    "\uffe9\005\uffe9\001\002\000\004\005\uffe7\001\002\000\004" +
    "\016\156\001\002\000\056\023\022\024\036\025\035\026" +
    "\043\027\030\030\021\031\017\032\042\033\044\034\041" +
    "\035\031\036\023\037\034\040\016\041\032\042\024\043" +
    "\037\044\033\045\025\046\020\047\027\052\222\001\002" +
    "\000\006\004\136\006\135\001\002\000\006\005\230\006" +
    "\143\001\002\000\004\005\225\001\002\000\004\020\226" +
    "\001\002\000\004\052\227\001\002\000\006\004\uffdc\005" +
    "\uffdc\001\002\000\004\020\231\001\002\000\004\052\232" +
    "\001\002\000\006\004\uffdb\005\uffdb\001\002\000\004\006" +
    "\135\001\002\000\056\023\022\024\036\025\035\026\043" +
    "\027\030\030\021\031\017\032\042\033\044\034\041\035" +
    "\031\036\023\037\034\040\016\041\032\042\024\043\037" +
    "\044\033\045\025\046\020\047\027\052\235\001\002\000" +
    "\004\006\135\001\002\000\006\005\237\006\143\001\002" +
    "\000\004\012\240\001\002\000\004\052\241\001\002\000" +
    "\006\004\uffec\005\uffec\001\002\000\006\005\243\006\143" +
    "\001\002\000\004\012\244\001\002\000\004\052\245\001" +
    "\002\000\006\004\uffeb\005\uffeb\001\002\000\056\023\022" +
    "\024\036\025\035\026\043\027\030\030\021\031\017\032" +
    "\042\033\044\034\041\035\031\036\023\037\034\040\016" +
    "\041\032\042\024\043\037\044\033\045\025\046\020\047" +
    "\027\052\247\001\002\000\004\005\250\001\002\000\004" +
    "\017\251\001\002\000\004\052\252\001\002\000\006\004" +
    "\uffdd\005\uffdd\001\002\000\004\011\255\001\002\000\006" +
    "\004\ufff3\005\ufff3\001\002\000\004\052\256\001\002\000" +
    "\006\004\ufff5\005\ufff5\001\002\000\004\010\261\001\002" +
    "\000\006\004\ufff7\005\ufff7\001\002\000\004\052\262\001" +
    "\002\000\006\002\ufff8\004\ufff8\001\002\000\004\051\264" +
    "\001\002\000\056\023\uffc2\024\uffc2\025\uffc2\026\uffc2\027" +
    "\uffc2\030\uffc2\031\uffc2\032\uffc2\033\uffc2\034\uffc2\035\uffc2" +
    "\036\uffc2\037\uffc2\040\uffc2\041\uffc2\042\uffc2\043\uffc2\044" +
    "\uffc2\045\uffc2\046\uffc2\047\uffc2\052\uffc2\001\002\000\004" +
    "\053\266\001\002\000\056\023\uffc5\024\uffc5\025\uffc5\026" +
    "\uffc5\027\uffc5\030\uffc5\031\uffc5\032\uffc5\033\uffc5\034\uffc5" +
    "\035\uffc5\036\uffc5\037\uffc5\040\uffc5\041\uffc5\042\uffc5\043" +
    "\uffc5\044\uffc5\045\uffc5\046\uffc5\047\uffc5\052\uffc5\001\002" +
    "\000\004\051\270\001\002\000\056\023\uffc9\024\uffc9\025" +
    "\uffc9\026\uffc9\027\uffc9\030\uffc9\031\uffc9\032\uffc9\033\uffc9" +
    "\034\uffc9\035\uffc9\036\uffc9\037\uffc9\040\uffc9\041\uffc9\042" +
    "\uffc9\043\uffc9\044\uffc9\045\uffc9\046\uffc9\047\uffc9\052\uffc9" +
    "\001\002\000\004\051\272\001\002\000\056\023\uffd4\024" +
    "\uffd4\025\uffd4\026\uffd4\027\uffd4\030\uffd4\031\uffd4\032\uffd4" +
    "\033\uffd4\034\uffd4\035\uffd4\036\uffd4\037\uffd4\040\uffd4\041" +
    "\uffd4\042\uffd4\043\uffd4\044\uffd4\045\uffd4\046\uffd4\047\uffd4" +
    "\052\uffd4\001\002\000\004\053\274\001\002\000\056\023" +
    "\uffcf\024\uffcf\025\uffcf\026\uffcf\027\uffcf\030\uffcf\031\uffcf" +
    "\032\uffcf\033\uffcf\034\uffcf\035\uffcf\036\uffcf\037\uffcf\040" +
    "\uffcf\041\uffcf\042\uffcf\043\uffcf\044\uffcf\045\uffcf\046\uffcf" +
    "\047\uffcf\052\uffcf\001\002\000\004\051\276\001\002\000" +
    "\056\023\uffc1\024\uffc1\025\uffc1\026\uffc1\027\uffc1\030\uffc1" +
    "\031\uffc1\032\uffc1\033\uffc1\034\uffc1\035\uffc1\036\uffc1\037" +
    "\uffc1\040\uffc1\041\uffc1\042\uffc1\043\uffc1\044\uffc1\045\uffc1" +
    "\046\uffc1\047\uffc1\052\uffc1\001\002\000\004\053\300\001" +
    "\002\000\056\023\uffce\024\uffce\025\uffce\026\uffce\027\uffce" +
    "\030\uffce\031\uffce\032\uffce\033\uffce\034\uffce\035\uffce\036" +
    "\uffce\037\uffce\040\uffce\041\uffce\042\uffce\043\uffce\044\uffce" +
    "\045\uffce\046\uffce\047\uffce\052\uffce\001\002\000\006\054" +
    "\055\055\056\001\002\000\056\023\uffc7\024\uffc7\025\uffc7" +
    "\026\uffc7\027\uffc7\030\uffc7\031\uffc7\032\uffc7\033\uffc7\034" +
    "\uffc7\035\uffc7\036\uffc7\037\uffc7\040\uffc7\041\uffc7\042\uffc7" +
    "\043\uffc7\044\uffc7\045\uffc7\046\uffc7\047\uffc7\052\uffc7\001" +
    "\002\000\004\004\ufffd\001\002\000\006\002\uffff\004\013" +
    "\001\002\000\004\052\306\001\002\000\004\006\135\001" +
    "\002\000\006\005\310\006\143\001\002\000\004\007\311" +
    "\001\002\000\004\052\312\001\002\000\004\004\ufffb\001" +
    "\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\311\000\016\002\003\003\005\004\006\005\011\006" +
    "\010\007\007\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\005\302\006\303\007\007\001" +
    "\001\000\002\001\001\000\004\007\013\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\027" +
    "\025\030\037\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\030\101\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\031\053\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\031\071\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\031\077\001\001\000\002\001\001\000\006\010\103" +
    "\011\102\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\257\001\001\000\002\001\001\000\006\027\106" +
    "\030\037\001\001\000\004\030\101\001\001\000\020\012" +
    "\110\013\115\014\120\015\116\023\114\024\117\025\111" +
    "\001\001\000\016\013\253\014\120\015\116\023\114\024" +
    "\117\025\111\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\027\245\030\037\001" +
    "\001\000\006\027\233\030\037\001\001\000\006\027\220" +
    "\030\037\001\001\000\006\027\145\030\037\001\001\000" +
    "\006\027\130\030\037\001\001\000\004\030\101\001\001" +
    "\000\006\014\133\026\132\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\030\101\001\001\000\010\016\152\017\147\022" +
    "\151\001\001\000\004\022\216\001\001\000\002\001\001" +
    "\000\004\017\212\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\026\157" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\020\171\021\170\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\021\173\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\026\200\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\030\101\001\001\000\006\014\223\026\222\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\026\241\001\001\000" +
    "\004\030\101\001\001\000\004\026\235\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\030\101\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\031" +
    "\301\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\007\013\001\001\000\002\001\001\000\004\026\306\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$sintacticoGxml$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$sintacticoGxml$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$sintacticoGxml$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


 

	/*---------------Metodo que se llamara cuando sea encontrado algun error-----------------------------*/

	public void syntax_error(Symbol s){
	   	System.out.println("Error Sintactico -> lexema: |" + s.value +  "| " + "  Columna: "+  s.right + "linea:  "+  (s.left + 1) );
	   	String error = "el token \"" + s.value + "\" no es valida ";
                ErrorEjecucion err = new ErrorEjecucion("Sintactico Gxml",error,"sintactico","sintactico",(s.left + 1),s.right);
                Main.errores.add(err);
								
	}

	/*-----------------------------metodo para cuando ya no se pueda recuperar los errores-------------------*/

	public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
	    System.out.println("Error Sintactico No Recuperable-> lexema: |" + s.value + "| Linea: " + s.right + " Columna: " + s.left);
	}

	public Documento getDocumento(){

		return this.action_obj.raiz;
	}




}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$sintacticoGxml$actions {


	Documento raiz;

  private final sintacticoGxml parser;

  /** Constructor */
  CUP$sintacticoGxml$actions(sintacticoGxml parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$sintacticoGxml$do_action(
    int                        CUP$sintacticoGxml$act_num,
    java_cup.runtime.lr_parser CUP$sintacticoGxml$parser,
    java.util.Stack            CUP$sintacticoGxml$stack,
    int                        CUP$sintacticoGxml$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$sintacticoGxml$result;

      /* select the action based on the action number */
      switch (CUP$sintacticoGxml$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // BOOLEANOS ::= falso 
            {
              String RESULT =null;
		RESULT="falso";
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("BOOLEANOS",23, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // BOOLEANOS ::= verdadero 
            {
              String RESULT =null;
		RESULT="verdadero";
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("BOOLEANOS",23, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // ELEMENTO ::= atb_auto_reprodu igual BOOLEANOS 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_autoRepro,Constantes.tipo_booleano,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // ELEMENTO ::= atb_path igual cadenaXml 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_path,Constantes.tipo_cadena,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // ELEMENTO ::= atb_referencia igual cadenaXml 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_referencia,Constantes.tipo_id,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // ELEMENTO ::= atb_accion igual codigo 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_accion,Constantes.tipo_codigo,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // ELEMENTO ::= atb_minimo igual numero 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_minimo,Constantes.tipo_numero,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // ELEMENTO ::= atb_maximo igual numero 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_maximo,Constantes.tipo_numero,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // ELEMENTO ::= atb_cursiva igual BOOLEANOS 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_cursiva,Constantes.tipo_booleano,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // ELEMENTO ::= atb_negrita igual BOOLEANOS 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_negrita,Constantes.tipo_booleano,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // ELEMENTO ::= atb_tam igual numero 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_tam,Constantes.tipo_numero,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // ELEMENTO ::= atb_fuente igual cadenaXml 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_fuente,Constantes.tipo_cadena,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // ELEMENTO ::= atb_nombre igual cadenaXml 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_nombre,Constantes.tipo_id,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // ELEMENTO ::= atb_borde igual BOOLEANOS 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_borde,Constantes.tipo_booleano,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // ELEMENTO ::= atb_ancho igual numero 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_ancho,Constantes.tipo_numero,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // ELEMENTO ::= atb_alto igual numero 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_alto,Constantes.tipo_numero,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // ELEMENTO ::= atb_y igual numero 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_y,Constantes.tipo_numero,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ELEMENTO ::= atb_x igual numero 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_x,Constantes.tipo_numero,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // ELEMENTO ::= atb_accionfinal igual codigo 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_accionFinal,Constantes.tipo_codigo,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ELEMENTO ::= atb_accioninicial igual codigo 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_accionInicial,Constantes.tipo_codigo,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ELEMENTO ::= atb_color igual cadenaXml 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_color,Constantes.tipo_cadena,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ELEMENTO ::= atb_tipo igual cadenaXml 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_tipo,Constantes.tipo_id,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ELEMENTO ::= atb_id igual cadenaXml 
            {
              Atributo RESULT =null;
		int contleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int contright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String cont = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Atributo atb = new Atributo(Constantes.atb_id,Constantes.tipo_id,cont);
				RESULT = atb;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ELEMENTO",22, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // LISTA_ELEMENTO ::= ELEMENTO 
            {
              ArrayList<Atributo> RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		Atributo e = (Atributo)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Atributo> lista = new ArrayList();
					lista.add(e);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_ELEMENTO",21, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // LISTA_ELEMENTO ::= LISTA_ELEMENTO ELEMENTO 
            {
              ArrayList<Atributo> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		ArrayList<Atributo> l = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		Atributo e = (Atributo)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Atributo> lista = l;
					lista.add(e);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_ELEMENTO",21, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // TEXTO ::= textoXml 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
			RESULT = e;
		
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("TEXTO",20, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // TEXTO ::= TEXTO textoXml 
            {
              String RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		String l = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
			RESULT = l;
			RESULT +=" " + e;
		
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("TEXTO",20, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ETQ_ENVIAR ::= abrir etq_enviar LISTA_ELEMENTO cerrar TEXTO abrird etq_enviar cerrar 
            {
              EtiquetaEnviar RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).value;
		int atbleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).left;
		int atbright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).right;
		ArrayList<Atributo> atb = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
				EtiquetaEnviar etq = new EtiquetaEnviar(t.trim());
				etq.setLineaColumna(erleft+1,erright);
				etq.setAtributos(atb);
				RESULT = etq;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_ENVIAR",19, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ETQ_ENVIAR ::= abrir etq_enviar LISTA_ELEMENTO cerrar ETQ_TEXTO abrird etq_enviar cerrar 
            {
              EtiquetaEnviar RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).value;
		int atbleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).left;
		int atbright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).right;
		ArrayList<Atributo> atb = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		EtiquetaTexto e1 = (EtiquetaTexto)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
				EtiquetaEnviar etq = new EtiquetaEnviar(e1.getTexto().trim());
				etq.setLineaColumna(erleft+1,erright);
				etq.setAtributos(atb);
				e1.setTipoTextoInterno(true);
				etq.addEtiquetasHijas(e1);
				RESULT = etq;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_ENVIAR",19, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ETQ_BOTON ::= abrir etq_boton LISTA_ELEMENTO cerrar TEXTO abrird etq_boton cerrar 
            {
              EtiquetaBoton RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).value;
		int atbleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).left;
		int atbright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).right;
		ArrayList<Atributo> atb = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
				EtiquetaBoton etq = new EtiquetaBoton(t.trim());
				etq.setLineaColumna(erleft+1,erright);
				etq.setAtributos(atb);
				RESULT = etq;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_BOTON",18, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ETQ_BOTON ::= abrir etq_boton LISTA_ELEMENTO cerrar ETQ_TEXTO abrird etq_boton cerrar 
            {
              EtiquetaBoton RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).value;
		int atbleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).left;
		int atbright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).right;
		ArrayList<Atributo> atb = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		EtiquetaTexto e1 = (EtiquetaTexto)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
				EtiquetaBoton etq = new EtiquetaBoton(e1.getTexto().trim());
				etq.setAtributos(atb);
				etq.setLineaColumna(erleft+1,erright);
				e1.setTipoTextoInterno(true);
				etq.addEtiquetasHijas(e1);
				RESULT = etq;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_BOTON",18, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ETQ_MULTIMEDIA ::= abrir etq_multimedia LISTA_ELEMENTO cerrar abrird etq_multimedia cerrar 
            {
              EtiquetaMultimedia RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).value;
		int atbleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-4)).left;
		int atbright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-4)).right;
		ArrayList<Atributo> atb = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-4)).value;
		
				EtiquetaMultimedia etq = new EtiquetaMultimedia();
				etq.setLineaColumna(erleft+1,erright);
				etq.setAtributos(atb);
				RESULT = etq;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_MULTIMEDIA",17, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ETQ_DEFECTO ::= abrir etq_defecto cerrar abrird etq_defecto cerrar 
            {
              EtiquetaDefecto RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).value;
		
				EtiquetaDefecto etq = new EtiquetaDefecto("");
				etq.setLineaColumna(erleft+1,erright);
				RESULT = etq;

			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_DEFECTO",16, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ETQ_DEFECTO ::= abrir etq_defecto cerrar TEXTO abrird etq_defecto cerrar 
            {
              EtiquetaDefecto RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
				EtiquetaDefecto etq = new EtiquetaDefecto(t);
				etq.setLineaColumna(erleft+1,erright);
				RESULT = etq;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_DEFECTO",16, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ETQ_DATO ::= abrir etq_datos cerrar abrird etq_datos cerrar 
            {
              EtiquetaDato RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).value;
		
				EtiquetaDato etq = new EtiquetaDato("");
				etq.setLineaColumna(erleft+1,erright);
				RESULT = etq;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_DATO",15, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ETQ_DATO ::= abrir etq_datos cerrar TEXTO abrird etq_datos cerrar 
            {
              EtiquetaDato RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
				EtiquetaDato etq = new EtiquetaDato(t);
				etq.setLineaColumna(erleft+1,erright);
				RESULT = etq;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_DATO",15, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // LISTA_DATO ::= ETQ_DATO 
            {
              ArrayList<Etiqueta> RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaDato d = (EtiquetaDato)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				ArrayList<Etiqueta> lista = new ArrayList();
				lista.add(d);
				RESULT = lista;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_DATO",14, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // LISTA_DATO ::= LISTA_DATO ETQ_DATO 
            {
              ArrayList<Etiqueta> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		ArrayList<Etiqueta> l = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		int dleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaDato d = (EtiquetaDato)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				ArrayList<Etiqueta> lista = l;
				lista.add(d);
				RESULT = lista;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_DATO",14, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ETQ_LISTADATOS ::= abrir etq_listadatos cerrar LISTA_DATO abrird etq_listadatos cerrar 
            {
              EtiquetaListaDatos RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		ArrayList<Etiqueta> l = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
				EtiquetaListaDatos etq = new EtiquetaListaDatos();
				etq.setContenido(l);
				etq.setLineaColumna(erleft+1,erright);
				RESULT = etq;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_LISTADATOS",13, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CONTENIDO_CONTROL ::= ETQ_DEFECTO 
            {
              ArrayList<Etiqueta> RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaDefecto e = (EtiquetaDefecto)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Etiqueta> lista = new ArrayList();
					lista.add(e);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("CONTENIDO_CONTROL",12, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CONTENIDO_CONTROL ::= ETQ_LISTADATOS 
            {
              ArrayList<Etiqueta> RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaListaDatos e = (EtiquetaListaDatos)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Etiqueta> lista = new ArrayList();
					lista.add(e);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("CONTENIDO_CONTROL",12, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CONTENIDO_CONTROL ::= ETQ_LISTADATOS ETQ_DEFECTO 
            {
              ArrayList<Etiqueta> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		EtiquetaListaDatos l = (EtiquetaListaDatos)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaDefecto e = (EtiquetaDefecto)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Etiqueta> lista = new ArrayList();
					lista.add(l);
					lista.add(e);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("CONTENIDO_CONTROL",12, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CONTENIDO_CONTROL ::= ETQ_DEFECTO ETQ_LISTADATOS 
            {
              ArrayList<Etiqueta> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		EtiquetaDefecto l = (EtiquetaDefecto)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaListaDatos e = (EtiquetaListaDatos)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Etiqueta> lista = new ArrayList();
					lista.add(l);
					lista.add(e);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("CONTENIDO_CONTROL",12, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ETQ_CONTROLADOR ::= abrir etq_control LISTA_ELEMENTO cerrar abrird etq_control cerrar 
            {
              EtiquetaControlador RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-4)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-4)).right;
		ArrayList<Atributo> l = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-4)).value;
		
					EtiquetaControlador etq = new EtiquetaControlador();
					etq.setAtributos(l);
					etq.setLineaColumna(erleft+1,erright);
					RESULT = etq;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_CONTROLADOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ETQ_CONTROLADOR ::= abrir etq_control LISTA_ELEMENTO cerrar CONTENIDO_CONTROL abrird etq_control cerrar 
            {
              EtiquetaControlador RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).right;
		ArrayList<Atributo> l = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).value;
		int clleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int clright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		ArrayList<Etiqueta> cl = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
					EtiquetaControlador etq = new EtiquetaControlador();
					etq.setAtributos(l);
					etq.setContenido(cl);
					etq.setLineaColumna(erleft+1,erright);
					RESULT = etq;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_CONTROLADOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ETQ_TEXTO ::= abrir etq_texto cerrar TEXTO abrird etq_texto cerrar 
            {
              EtiquetaTexto RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
					EtiquetaTexto etq = new EtiquetaTexto(t.trim());
					etq.setLineaColumna(erleft+1,erright);
					RESULT = etq;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_TEXTO",10, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ETQ_TEXTO ::= abrir etq_texto LISTA_ELEMENTO cerrar TEXTO abrird etq_texto cerrar 
            {
              EtiquetaTexto RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).right;
		ArrayList<Atributo> l = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
					EtiquetaTexto etq = new EtiquetaTexto(t.trim());
					etq.setAtributos(l);
					etq.setLineaColumna(erleft+1,erright);
					RESULT = etq;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_TEXTO",10, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CONTENIDO ::= ETQ_ENVIAR 
            {
              Etiqueta RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaEnviar e = (EtiquetaEnviar)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				RESULT = e;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("CONTENIDO",9, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CONTENIDO ::= ETQ_BOTON 
            {
              Etiqueta RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaBoton e = (EtiquetaBoton)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				RESULT = e;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("CONTENIDO",9, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CONTENIDO ::= ETQ_MULTIMEDIA 
            {
              Etiqueta RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaMultimedia e = (EtiquetaMultimedia)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				RESULT = e;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("CONTENIDO",9, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CONTENIDO ::= ETQ_CONTROLADOR 
            {
              Etiqueta RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaControlador e = (EtiquetaControlador)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				RESULT = e;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("CONTENIDO",9, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CONTENIDO ::= ETQ_TEXTO 
            {
              Etiqueta RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaTexto e = (EtiquetaTexto)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				RESULT = e;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("CONTENIDO",9, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // LISTA_CONTENIDO ::= CONTENIDO 
            {
              ArrayList<Etiqueta> RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		Etiqueta c = (Etiqueta)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Etiqueta> lista = new ArrayList();
					lista.add(c);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_CONTENIDO",8, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // LISTA_CONTENIDO ::= LISTA_CONTENIDO CONTENIDO 
            {
              ArrayList<Etiqueta> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		ArrayList<Etiqueta> l = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		Etiqueta c = (Etiqueta)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Etiqueta> lista = l;
					lista.add(c);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_CONTENIDO",8, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ETQ_CONTENEDOR ::= abrir etq_contenedor LISTA_ELEMENTO cerrar abrird etq_contenedor cerrar 
            {
              EtiquetaContenedor RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-4)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-4)).right;
		ArrayList<Atributo> l = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-4)).value;
		
					EtiquetaContenedor etq = new EtiquetaContenedor();
					etq.setAtributos(l);
					etq.setLineaColumna(erleft+1,erright);
					RESULT = etq;

				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_CONTENEDOR",7, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ETQ_CONTENEDOR ::= abrir etq_contenedor LISTA_ELEMENTO cerrar LISTA_CONTENIDO abrird etq_contenedor cerrar 
            {
              EtiquetaContenedor RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).right;
		ArrayList<Atributo> l = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).value;
		int lcleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int lcright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		ArrayList<Etiqueta> lc = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
					EtiquetaContenedor etq = new EtiquetaContenedor();
					etq.setAtributos(l);
					etq.setContenido(lc);
					etq.setLineaColumna(erleft+1,erright);
					RESULT = etq;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_CONTENEDOR",7, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // LISTA_CONTENEDOR ::= ETQ_CONTENEDOR 
            {
              ArrayList<Etiqueta> RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaContenedor c = (EtiquetaContenedor)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Etiqueta> lista = new ArrayList();
					lista.add(c);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_CONTENEDOR",6, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // LISTA_CONTENEDOR ::= LISTA_CONTENEDOR ETQ_CONTENEDOR 
            {
              ArrayList<Etiqueta> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		ArrayList<Etiqueta> l = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaContenedor c = (EtiquetaContenedor)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Etiqueta> lista = l;
					lista.add(c);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_CONTENEDOR",6, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ETQ_VENTANA ::= abrir etq_ventana LISTA_ELEMENTO cerrar LISTA_CONTENEDOR abrird etq_ventana cerrar 
            {
              EtiquetaVentana RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).right;
		ArrayList<Atributo> l = (ArrayList<Atributo>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-5)).value;
		int lcleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int lcright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		ArrayList<Etiqueta> lc = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
					EtiquetaVentana etq = new EtiquetaVentana();
					etq.setAtributos(l);
					etq.setContenido(lc);
					etq.setLineaColumna(erleft+1,erright);
					RESULT = etq;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_VENTANA",5, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // LISTA_VENTANA ::= ETQ_VENTANA 
            {
              ArrayList<Etiqueta> RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaVentana c = (EtiquetaVentana)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Etiqueta> lista = new ArrayList();
					lista.add(c);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_VENTANA",4, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // LISTA_VENTANA ::= LISTA_VENTANA ETQ_VENTANA 
            {
              ArrayList<Etiqueta> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		ArrayList<Etiqueta> l = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaVentana c = (EtiquetaVentana)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
					ArrayList<Etiqueta> lista =l;
					lista.add(c);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_VENTANA",4, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ETQ_IMPORTAR ::= abrir etq_importar cerrar TEXTO abrird etq_importar cerrar 
            {
              EtiquetaImportar RESULT =null;
		int erleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).left;
		int erright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).right;
		String er = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-3)).value;
		
					EtiquetaImportar etq = new EtiquetaImportar(t);
					etq.setLineaColumna(erleft+1,erright);
					RESULT = etq;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("ETQ_IMPORTAR",3, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-6)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // LISTA_IMPORTAR ::= ETQ_IMPORTAR 
            {
              ArrayList<Etiqueta> RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaImportar c = (EtiquetaImportar)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
                	ArrayList<Etiqueta> lista = new ArrayList();
					lista.add(c);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_IMPORTAR",2, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // LISTA_IMPORTAR ::= LISTA_IMPORTAR ETQ_IMPORTAR 
            {
              ArrayList<Etiqueta> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		ArrayList<Etiqueta> l = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		EtiquetaImportar c = (EtiquetaImportar)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
                	ArrayList<Etiqueta> lista = l;
					lista.add(c);
					RESULT = lista;
				
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("LISTA_IMPORTAR",2, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // DOCUMENTO ::= LISTA_VENTANA 
            {
              Documento RESULT =null;
		int listaleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int listaright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		ArrayList<Etiqueta> lista = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Documento doct = new Documento();
				for(Etiqueta etq :lista ){
					doct.addVentana(etq);
				}
				RESULT = doct;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("DOCUMENTO",1, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // DOCUMENTO ::= LISTA_IMPORTAR LISTA_VENTANA 
            {
              Documento RESULT =null;
		int lileft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		ArrayList<Etiqueta> li = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		int listaleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int listaright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		ArrayList<Etiqueta> lista = (ArrayList<Etiqueta>)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
				Documento doct = new Documento();
				for( Etiqueta etq :lista ){
					doct.addVentana(etq);
				}
				for(Etiqueta etq :li ){
					doct.addImportados(etq);
				}
				RESULT = doct;
			
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("DOCUMENTO",1, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIA ::= DOCUMENTO 
            {
              Object RESULT =null;
		int docleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).left;
		int docright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()).right;
		Documento doc = (Documento)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.peek()).value;
		
			raiz=doc;
		
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("INICIA",0, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          return CUP$sintacticoGxml$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIA EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)).value;
		RESULT = start_val;
              CUP$sintacticoGxml$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.elementAt(CUP$sintacticoGxml$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGxml$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$sintacticoGxml$parser.done_parsing();
          return CUP$sintacticoGxml$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

